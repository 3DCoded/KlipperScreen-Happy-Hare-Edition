# ERCF Happy Hare KlipperScreen menus. Don't remove this line!
#
# name, icon, panel, method, confirm, enable, params, style, show_disabled, refresh_on
#[menu __main ercfpanel]
#name: {{ gettext('ERCFpanel') }}
#icon: ercf_carrot
#panel: ercf_panel
#enable: {{ printer.extruders.count > 0 }}

[menu __main actions ercf]
name: {{ gettext('ERCF') }}
icon: ercf_carrot
enable: {{ printer.extruders.count > 0 }}

# ---------- ERCF main menu
#
[menu __main actions ercf pause]
name: {{ gettext('ERCF Pause') }}
icon: pause
method: printer.gcode.script
params: {"script":"ERCF_PAUSE"}
enable: {{ not printer.ercf.is_locked and not printer.pause_resume.is_paused }}
show_disabled: True
refresh_on: printer.ercf.is_locked, printer.pause_resume.is_paused

[menu __main actions ercf unlock]
name: {{ gettext('Unlock') }}
icon: ercf_unlock
method: printer.gcode.script
params: {"script":"ERCF_UNLOCK"}
enable: {{ printer.ercf.is_locked }}
show_disabled: True
refresh_on: printer.ercf.is_locked

[menu __main actions ercf resume]
name: {{ gettext('Resume') }}
icon: resume
method: printer.gcode.script
params: {"script":"RESUME"}
enable: {{ not printer.ercf.is_locked and printer.pause_resume.is_paused }}
show_disabled: True
refresh_on: printer.ercf.is_locked, printer.pause_resume.is_paused

[menu __main actions ercf recover]
name: {{ gettext('Recover') }}
icon: ercf_recover
confirm: This will automatically recover ERCF state. Are you sure?
method: printer.gcode.script
params: {"script":"ERCF_RECOVER"}

[menu __main actions ercf formtip]
name: {{ gettext('Form Tip') }}
icon: ercf_formtip
method: printer.gcode.script
params: {"script":"ERCF_STATUS"}

[menu __main actions ercf bypass]
name: {{ gettext('Bypass...') }}
icon: ercf_bypass

# ---------- ERCF Bypass submenu
#
[menu __main actions ercf bypass select]
name: {{ gettext('Select Bypass') }}
icon: ercf_bypass
method: printer.gcode.script
params: {"script":"ERCF_SELECT_BYPASS"}

[menu __main actions ercf bypass load]
name: {{ gettext('Load Bypass') }}
icon: ercf_load_bypass
method: printer.gcode.script
params: {"script":"ERCF_LOAD_BYPASS"}

[menu __main actions ercf bypass unload]
name: {{ gettext('Unload Bypass') }}
icon: ercf_unload_bypass
method: printer.gcode.script
params: {"script":"ERCF_UNLOAD_BYPASS"}
#
# ---------- ERCF Bypass end

[menu __main actions ercf manage]
name: {{ gettext('Manage ERCF...') }}
icon: ercf_gear
enable: {{ printer.idle_timeout.state != "Printing" }}
show_disabled: True
refresh_on: printer.idle_timeout.state

# ---------- ERCF Manage submenu
#
[menu __main actions ercf manage tools]
name: {{ gettext('Load Tool...') }}
icon: extruder

ERCF_iter_tools

[menu __main actions ercf manage select_tools]
name: {{ gettext('Select Tool...') }}
icon: ercf_select0

ERCF_iter_select_tools

[menu __main actions ercf manage select_gates]
name: {{ gettext('Select Gate...') }}
icon: ercf_select0

ERCF_iter_select_gates

[menu __main actions ercf manage check_gates]
name: {{ gettext('Check Gate...') }}
icon: ercf_checkgates

[menu __main actions ercf manage check_gates all]
name: {{ gettext('Check All Gates') }}
icon: ercf_checkgates
method: printer.gcode.script
params: {"script":"ERCF_CHECK_GATES"}

ERCF_iter_check_gates

[menu __main actions ercf manage preload_gates]
name: {{ gettext('Preload Gate...') }}
icon: ercf_reset

ERCF_iter_preload_gates

[menu __main actions ercf manage motoroff]
name: {{ gettext('Disable Motors') }}
icon: motor-off
method: printer.gcode.script
params: {"script":"ERCF_MOTORS_OFF"}

[menu __main actions ercf manage servoup]
name: {{ gettext('Servo UP') }}
icon: arrow-up
method: printer.gcode.script
params: {"script":"ERCF_SERVO_UP"}
enable: {{ printer.ercf.servo != "Up" }}
show_disabled: True
refresh_on: printer.ercf.servo

[menu __main actions ercf manage servodown]
name: {{ gettext('Servo Down') }}
icon: arrow-down
method: printer.gcode.script
params: {"script":"ERCF_SERVO_DOWN"}
enable: {{ printer.ercf.servo != "Down" }}
show_disabled: True
refresh_on: printer.ercf.servo

[menu __main actions ercf manage home]
name: {{ gettext('Home Selector') }}
icon: home
method: printer.gcode.script
params: {"script":"ERCF_HOME"}
#
# ---------- ERCF Manage end


# ---------- ERCF config/calibration menu
#
[menu __main config ercf_calib]
name: {{ gettext('ERCF Calibration...') }}
icon: ercf_gear

[menu __main config ercf_calib encoder]
name: {{ gettext('Encoder') }}
icon: ercf_encodercal
method: printer.gcode.script
params: {"script":"ERCF_CALIBRATE_ENCODER"}

[menu __main config ercf_calib all]
name: {{ gettext('Calibrate ALL') }}
icon: extruder
method: printer.gcode.script
params: {"script":"ERCF_CALIBRATE"}

ERCF_iter_calibration

[menu __main config ercf_calib grip]
name: {{ gettext('Test Grop') }}
icon: ercf_grip
method: printer.gcode.script
params: {"script":"ERCF_TEST_GRIP"}
#
# ---------- ERCF config/calibration end


# PAUL check this?
[menu __print ercf]
name: {{ gettext('ERCF Status') }}
icon: ercf_carrot
method: printer.gcode.script
params: {"script":"ERCF_STATUS"}


# PAUL temp...
[printer BigRed]
moonraker_host: 192.168.0.103
moonraker_port: 7125
moonraker_api_key: False
camera_url: http://192.168.0.103/webcam/?action=stream

[printer BabyBlue]
moonraker_host: 192.168.0.102
moonraker_port: 7125
moonraker_api_key: False
camera_url: http://192.168.0.102/webcam/?action=stream

#~# --- Do not edit below this line. This section is auto generated --- #~#
#~#
#~# [main]
#~# 24htime = False
#~# confirm_estop = True
#~# use_dpms = False
#~# print_sort_dir = date_desc
#~#
